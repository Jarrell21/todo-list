(()=>{"use strict";const t=(t,e,s)=>{const o=()=>t,n=()=>e,a=()=>s;return{getTitle:o,setTitle:e=>{t=e},getDate:n,setDate:t=>{e=t},getStatus:a,setStatus:t=>{s=t},toJSON:()=>({title:o(),dueDate:n(),status:a()}),getDateFormatted:()=>{const t=e.split("-")[0];return`${e.split("-")[1]}/${e.split("-")[2]}/${t}`}}},e=t=>{const e=()=>t;let s=[];const o=()=>s;return{toJSON:()=>({projectName:e(),tasks:o()}),setTasks:t=>{s=t},getName:e,setName:e=>{t=e},getTasks:o,getTask:t=>s.find((e=>e.getTitle()===t)),contains:t=>s.some((e=>e.getTitle()===t)),addTask:t=>{s.push(t)},deleteTask:t=>{s=s.filter((e=>e.getTitle()!==t))}}},s={getTodoList:()=>{const s=Object.assign((()=>{let t=[];t.push(e("Home")),t.push(e("Today")),t.push(e("This week"));const s=()=>t;return{toJSON:()=>({projects:s()}),getProjects:s,getProject:e=>t.find((t=>t.getName()===e)),addProject:e=>{t.push(e)},setProjects:e=>{t=e},deleteProject:e=>{t=t.filter((t=>t.getName()!==e))}}})(),JSON.parse(localStorage.getItem("todoList")));return null!==localStorage.getItem("todoList")?(s.setProjects(s.projects.map((t=>Object.assign(e(),t)))),s.getProjects().forEach((t=>t.setName(t.projectName))),s.getProjects().forEach((e=>{e.setTasks(e.tasks.map((e=>Object.assign(t(),e))))})),s.getProjects().forEach((t=>{t.getTasks().forEach((t=>{t.setTitle(t.title),t.setDate(t.dueDate),t.setStatus(t.status)}))}))):(s.setProjects(s.getProjects().map((t=>Object.assign(e(),t)))),s.getProjects().forEach((e=>e.setTasks(e.getTasks().map((e=>Object.assign(t(),e))))))),s},saveTodoList:t=>{localStorage.setItem("todoList",JSON.stringify(t))},addTask:(t,e)=>{const o=s.getTodoList();o.getProject(t).addTask(e),s.saveTodoList(o)},addProject:t=>{const e=s.getTodoList();e.addProject(t),s.saveTodoList(e)},setTask:(t,e,o,n)=>{const a=s.getTodoList();a.getProject(t).getTask(e).setDate(n),a.getProject(t).getTask(e).setTitle(o),s.saveTodoList(a)},changeTaskStatus:(t,e,o)=>{const n=s.getTodoList();n.getProject(t).getTask(e).setStatus(o),s.saveTodoList(n)},deleteProject:t=>{const e=s.getTodoList();e.deleteProject(t),s.saveTodoList(e)},deleteTask:(t,e)=>{const o=s.getTodoList();o.getProject(t).deleteTask(e),s.saveTodoList(o)}},o=s,n={loadHomePage:()=>{n.loadProjects(),n.initAddProjectButtons(),n.openProject("Home",document.getElementById("home-btn"))},loadProjects:()=>{o.getTodoList().getProjects().forEach((t=>{"Home"!==t.getName()&&"Today"!==t.getName()&&"This week"!==t.getName()&&n.createNewProject(t.getName())})),n.initProjectButtons()},loadProjectContent:t=>{document.querySelector("#content").innerHTML=`\n        <div id="content-title">${t}</div>\n        <div id="content-body">\n          <div class="tasks-list"></div>\n        </div>`;const e=document.querySelector("#content-body");"Today"!==t&&"This week"!==t&&(e.innerHTML+='\n                <button class="add-task-btn">\n                  Add Task\n                </button>\n                <div class="task-popup" style="display: none">\n                  <input placeholder="Title" class="task-popup-title">\n                  <input type="date" class="task-popup-date">\n                  <div class="task-popup-btns">\n                    <button class="task-popup-add-btn">\n                      ADD\n                    </button>\n                    <button class="task-popup-cancel-btn">\n                      CANCEL\n                    </button>\n                  </div>\n                </div>'),n.loadTasks(t)},loadHomeTasks:t=>{n.openProject("Home",t.currentTarget)},loadTodayTasks:t=>{n.openProject("Today",t.currentTarget)},loadThisWeekTasks:t=>{n.openProject("This week",t.currentTarget)},createNewProject:t=>{document.querySelector(".projects-list").innerHTML+=`\n    <div class="project">\n      <button class="project-btn">\n        <span>${t}</span>\n        <span class="project-delete-btn">x</span>\n      </button>\n      \n    </div>\n    `,n.initProjectButtons()},openProject:(t,e)=>{const s=document.querySelectorAll("button");n.loadProjectContent(t),s.forEach((t=>{t.classList.remove("active")})),e.classList.add("active")},addProject:()=>{const t=document.querySelector(".project-popup-input").value,s=e(t);o.addProject(s),n.createNewProject(s.getName()),n.closeProjectPopup()},deleteProject:(t,e)=>{e.classList.contains("active")&&n.clearProjectContent(),o.deleteProject(t),e.parentNode.remove()},clearProjects:()=>{document.querySelector(".projects-list").textContent=""},clearProjectContent:()=>{document.querySelector("#content").textContent=""},openProjectPopup:()=>{const t=document.querySelector(".add-project-btn"),e=document.querySelector(".project-popup");t.style.display="none",e.style.display="flex"},closeProjectPopup:()=>{const t=document.querySelector(".add-project-btn"),e=document.querySelector(".project-popup"),s=document.querySelector(".project-popup-input");t.style.display="block",e.style.display="none",s.value=""},loadTasks:t=>{o.getTodoList().getProject(t).getTasks().forEach((t=>{n.createNewTask(t)})),"Today"!==t&&"This week"!==t&&n.initAddTaskButtons()},createNewTask:t=>{const e=document.querySelector("#content-title").textContent,s=document.querySelector(".tasks-list"),a=document.createElement("div"),c=document.createElement("div"),d=o.getTodoList().getProject(e).getTask(t.getTitle()).getStatus();a.classList.add("task"),"ongoing"===d?(a.classList.remove("completed"),a.innerHTML+='<input type="checkbox" class="task-checkbox">'):(a.classList.add("completed"),a.innerHTML+='<input type="checkbox" class="task-checkbox" checked>'),a.innerHTML+=`\n        <p class="task-title">${t.getTitle()}</p>\n        <p class="task-due-date">${t.getDateFormatted()}</p>\n        <button class="edit-task-btn">Edit</button>\n        <button class="delete-task-btn">Delete</button>\n      `,c.classList.add("edit-task-popup"),c.innerHTML+=`\n      <input type="text" value="${t.getTitle()}" class="edit-task-task-title">\n      <input type="date" value="${t.getDate()}" class="edit-task-task-due-date">\n      <div class="edit-task-popup-buttons">\n        <button class="edit-task-save-btn">Save</button>\n        <button class="edit-task-cancel-btn">Cancel</button>\n      </div>\n    `,a.appendChild(c),s.appendChild(a),n.initTaskButtons()},addTask:()=>{const e=document.querySelector("#content-title").textContent,s=document.querySelector(".task-popup-title").value,a=document.querySelector(".task-popup-date").value,c=t(s,a,"ongoing");""!==s&&""!==a?(o.addTask(e,c),n.closeTaskPopup(),n.createNewTask(c)):alert("Fields must be complete")},editTask:t=>{const e=document.querySelector("#content-title").textContent,s=[...t.target.parentNode.parentNode.parentNode.children],a=s.find((t=>t.classList.contains("edit-task-popup"))),c=s.find((t=>t.classList.contains("task-title"))).textContent,d=[...a.children].find((t=>t.classList.contains("edit-task-task-title"))).value,l=[...a.children].find((t=>t.classList.contains("edit-task-task-due-date"))).value;o.setTask(e,c,d,l),n.closeEditTaskPopup(),n.clearTasks(),n.loadTasks(e)},deleteTask:t=>{const e=document.querySelector("#content-title").textContent,s=t.target.parentNode.children[1].textContent;o.deleteTask(e,s),n.clearTasks(),n.loadTasks(e)},changeTaskStatus:t=>{const e=document.querySelector("#content-title").textContent,s=t.target.parentNode,n=s.children[1].textContent;t.target.checked?(s.classList.add("completed"),o.changeTaskStatus(e,n,"completed")):(s.classList.remove("completed"),o.changeTaskStatus(e,n,"ongoing"))},clearTasks:()=>{document.querySelector(".tasks-list").textContent=""},openEditTaskPopup:t=>{const e=[...t.target.parentNode.children],s=e.find((t=>t.classList.contains("edit-task-popup"))),o=[...s.children].find((t=>t.classList.contains("edit-task-popup-buttons"))),a=[...o.children].find((t=>t.classList.contains("edit-task-save-btn"))),c=[...o.children].find((t=>t.classList.contains("edit-task-cancel-btn")));e.forEach((t=>{t!==s&&(t.style.display="none")})),s.style.display="flex",c.addEventListener("click",n.closeEditTaskPopup),a.addEventListener("click",n.editTask),n.hideTaskButtons()},closeEditTaskPopup:()=>{document.querySelectorAll(".task").forEach((t=>{[...t.children].forEach((t=>{t.classList.contains("edit-task-popup")?t.style.display="none":t.style.display=""}))})),n.showTaskButtons()},hideTaskButtons:()=>{const t=document.querySelector(".add-task-btn"),e=document.querySelectorAll(".edit-task-btn"),s=document.querySelectorAll(".delete-task-btn");t.style.display="none",e.forEach((t=>{t.style.display="none"})),s.forEach((t=>{t.style.display="none"}))},showTaskButtons:()=>{const t=document.querySelector(".add-task-btn"),e=document.querySelectorAll(".edit-task-btn"),s=document.querySelectorAll(".delete-task-btn");t.style.display="",e.forEach((t=>{t.style.display=""})),s.forEach((t=>{t.style.display=""}))},openTaskPopup:()=>{const t=document.querySelector(".add-task-btn"),e=document.querySelector(".task-popup");t.style.display="none",e.style.display="flex"},closeTaskPopup:()=>{const t=document.querySelector(".add-task-btn"),e=document.querySelector(".task-popup"),s=document.querySelectorAll(".task-popup>input");t.style.display="block",e.style.display="none",s.forEach((t=>t.value=null))},initAddTaskButtons:()=>{const t=document.querySelector(".add-task-btn"),e=document.querySelector(".task-popup-add-btn"),s=document.querySelector(".task-popup-cancel-btn");t.addEventListener("click",n.openTaskPopup),e.addEventListener("click",n.addTask),s.addEventListener("click",n.closeTaskPopup)},initAddProjectButtons:()=>{const t=document.querySelector(".add-project-btn"),e=document.querySelector(".project-popup-add-btn"),s=document.querySelector(".project-popup-cancel-btn");t.addEventListener("click",n.openProjectPopup),e.addEventListener("click",n.addProject),s.addEventListener("click",n.closeProjectPopup)},initProjectButtons:()=>{const t=document.querySelector("#home-btn"),e=document.querySelector("#today-btn"),s=document.querySelector("#this-week-btn"),o=document.querySelectorAll(".project-btn");t.addEventListener("click",n.loadHomeTasks),e.addEventListener("click",n.loadTodayTasks),s.addEventListener("click",n.loadThisWeekTasks),o.forEach((t=>{t.addEventListener("click",n.handleProjectButtons)}))},initTaskButtons:()=>{const t=document.querySelectorAll(".task-checkbox"),e=document.querySelectorAll(".edit-task-btn"),s=document.querySelectorAll(".delete-task-btn");t.forEach((t=>{t.addEventListener("change",n.changeTaskStatus)})),e.forEach((t=>{t.addEventListener("click",n.openEditTaskPopup)})),s.forEach((t=>{t.addEventListener("click",n.deleteTask)}))},handleProjectButtons:t=>{const e=t.currentTarget,s=e.children[0].textContent;t.target.classList.contains("project-delete-btn")?n.deleteProject(s,e):n.openProject(s,e)}},a=n;document.addEventListener("DOMContentLoaded",a.loadHomePage)})();